#!/usr/bin/env python3

import sys
import os
from practicals.lib.files import file_copy, file_append, file_read, file_write,\
                                 run_cmd, file_delete, get_current_user,\
                                 get_tmp_dir, chmod


PATH = os.path.dirname(os.path.abspath(__file__))
USER = 'root'

# Format:    { 'id': install_cmd, ... }
installers = {'ecb': ['bash', '%s/practicals/ecb.sh' % PATH],
              'otp': ['bash', '%s/practicals/otp.sh' % PATH]}

if __name__ == "__main__":

    def _available():
        return ', '.join(installers.keys())

    try:
        to_install = sys.argv[1]

    except IndexError:
        print("Usage:")
        print("  ./install <practical-id> [docs-path]")
        print("    <practical-id> - One of: %s" % _available())
        print("    <docs-path>    - The path you want the docs to be installed in.")
        print("                     If not specified, a new temp directory will be created.")
        exit(1)

    if to_install not in installers:
        print("No practical with ID '%s' found." %  to_install)
        print("Available IDs are: %s" % _available())
        _available()
        exit(1)

    if get_current_user() != USER:
        print("This script needs to be run as the %s user." % USER)
        exit(1)

    DEPLOY_KEY = "/root/.ssh/id_rsa"
    KNOWN_HOSTS = "/root/.ssh/known_hosts"

    print("Installing common requirements (Sphinx)...")
    run_cmd(["apt-get", "update"])
    run_cmd(["apt-get", "install", "-f", "python-sphinx"])
    run_cmd(["pip", "install", "sphinx"])

    # Copy the deploy key, and update the known hosts file.
    file_copy("%s/practicals/lib/deploy.key" % PATH, DEPLOY_KEY)
    known_hosts = file_read("%s/practicals/lib/known_hosts" % PATH)
    file_append(KNOWN_HOSTS, known_hosts)
    chmod("0600", KNOWN_HOSTS)
    chmod("0600", DEPLOY_KEY)

    try:
        doc_path = sys.argv[2]

    except IndexError:
        doc_path = get_tmp_dir()

    installer = installers[to_install] + [doc_path]

    # Run the installer
    run_cmd(installer, verbose=True)

    # Remove the deploy key
    file_delete(DEPLOY_KEY)
